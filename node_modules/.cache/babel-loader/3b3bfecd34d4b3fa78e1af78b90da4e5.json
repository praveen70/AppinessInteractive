{"ast":null,"code":"var _jsxFileName = \"/Users/praveen.invts/Desktop/appiness-interactive/src/components/dashboard/index.js\";\nimport React from 'react';\nimport { MDBDataTable } from 'mdbreact';\nimport { connect } from 'react-redux';\nimport { userData } from '../../action/dashboardAction';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\n\nclass Dashboard extends React.Component {\n  componentDidMount() {\n    this.props.userData();\n  }\n\n  render() {\n    let data2 = this.props.emp && this.props.emp;\n    console.log(\"data=>>>>>\", data2);\n    const columns = [{\n      dataField: 'id',\n      text: 'ID'\n    }, {\n      dataField: 'name',\n      text: 'Name'\n    }, {\n      dataField: 'age',\n      text: 'Age'\n    }, {\n      dataField: 'email',\n      text: 'Email'\n    }, {\n      dataField: 'phoneNo',\n      text: 'Phone Number'\n    }]; // const data = {\n    //     columns: [\n    //       {\n    //         label: 'id',\n    //         field: 'name',\n    //         sort: 'asc',\n    //         width: 150\n    //       },\n    //       {\n    //         label: 'name',\n    //         field: 'position',\n    //         sort: 'asc',\n    //         width: 270\n    //       },\n    //       {\n    //         label: 'age',\n    //         field: 'office',\n    //         sort: 'asc',\n    //         width: 200\n    //       },\n    //       {\n    //         label: 'Age',\n    //         field: 'age',\n    //         sort: 'asc',\n    //         width: 100\n    //       },\n    //       {\n    //         label: 'Shender',\n    //         field: 'date',\n    //         sort: 'asc',\n    //         width: 150\n    //       },\n    //       {\n    //         label: 'email',\n    //         field: 'salary',\n    //         sort: 'asc',\n    //         width: 100\n    //       },\n    //       {\n    //         label: 'phoneNo',\n    //         field: 'salary',\n    //         sort: 'asc',\n    //         width: 100\n    //       }\n    //     ],\n    //   };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      class: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Id\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Age\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Phone Number\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"1\"), this.props.emp && this.props.emp.map(item => {\n      return React.createElement(React.Fragment, null, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, item.id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, item.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"@mdo\"));\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state.employeData.employeData);\n  return {\n    emp: state.employeData.employeData\n  };\n};\n\nexport default connect(mapStateToProps, {\n  userData\n})(Dashboard);","map":{"version":3,"sources":["/Users/praveen.invts/Desktop/appiness-interactive/src/components/dashboard/index.js"],"names":["React","MDBDataTable","connect","userData","BootstrapTable","paginationFactory","Dashboard","Component","componentDidMount","props","render","data2","emp","console","log","columns","dataField","text","map","item","id","name","mapStateToProps","state","employeData"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { MDBDataTable } from 'mdbreact';\nimport { connect } from 'react-redux';\nimport { userData} from '../../action/dashboardAction';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nclass Dashboard extends React.Component{\n    componentDidMount(){\n        this.props.userData();\n    }\n    render(){\n        let data2 = this.props.emp && this.props.emp\n        console.log(\"data=>>>>>\", data2)\n        const columns = [{\n            dataField: 'id',\n            text: 'ID'\n          }, {\n            dataField: 'name',\n            text: 'Name'\n          }, {\n            dataField: 'age',\n            text: 'Age'\n          }, {\n            dataField: 'email',\n            text: 'Email'\n          }, {\n            dataField: 'phoneNo',\n            text: 'Phone Number'\n          }]\n          ;\n\n        // const data = {\n        //     columns: [\n        //       {\n        //         label: 'id',\n        //         field: 'name',\n        //         sort: 'asc',\n        //         width: 150\n        //       },\n        //       {\n        //         label: 'name',\n        //         field: 'position',\n        //         sort: 'asc',\n        //         width: 270\n        //       },\n        //       {\n        //         label: 'age',\n        //         field: 'office',\n        //         sort: 'asc',\n        //         width: 200\n        //       },\n        //       {\n        //         label: 'Age',\n        //         field: 'age',\n        //         sort: 'asc',\n        //         width: 100\n        //       },\n        //       {\n        //         label: 'Shender',\n        //         field: 'date',\n        //         sort: 'asc',\n        //         width: 150\n        //       },\n        //       {\n        //         label: 'email',\n        //         field: 'salary',\n        //         sort: 'asc',\n        //         width: 100\n        //       },\n        //       {\n        //         label: 'phoneNo',\n        //         field: 'salary',\n        //         sort: 'asc',\n        //         width: 100\n        //       }\n        //     ],\n        \n        //   };\n        return(\n            <div>\n                \n                {/* <MDBDataTable\n                   // striped\n                    bordered\n                    hover\n                    data={data2}\n            /> */}\n            <table class=\"table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Id</th>\n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Age</th>\n      <th scope=\"col\">Email</th>\n      <th scope=\"col\">Phone Number</th>\n    </tr>\n  </thead>\n  <tbody>\n      \n    <tr>\n      <th scope=\"row\">1</th>\n      {this.props.emp && this.props.emp.map((item)=>{\n         return(\n             <>\n             <td>{item.id}</td>\n             <td>{item.name}</td>\n             <td>@mdo</td>\n</>\n         );\n      })}\n    </tr>\n    {/* <tr>\n      <th scope=\"row\">2</th>\n      <td>Jacob</td>\n      <td>Thornton</td>\n      <td>@fat</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">3</th>\n      <td>Larry</td>\n      <td>the Bird</td>\n      <td>@twitter</td>\n    </tr> */}\n  </tbody>\n</table>\n            </div>\n\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n\nconsole.log(state.employeData.employeData)\n    return {\n        emp: state.employeData.employeData,\n    };\n}\nexport default connect(mapStateToProps, { userData })(Dashboard);\n"]},"metadata":{},"sourceType":"module"}