{"ast":null,"code":"import _slicedToArray from \"/Users/praveen.invts/Desktop/appiness-interactive/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/praveen.invts/Desktop/appiness-interactive/src/components/login/index.js\";\nimport React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody } from 'mdbreact';\nimport './login.css';\nimport { sigIn } from '../../action/loginAction';\nimport { connect } from 'react-redux';\nimport { login } from '../../json/index';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.inputChnage = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.buttonSubmit = event => {\n      event.preventDefault();\n\n      let _login = _slicedToArray(login, 1),\n          _login$ = _login[0],\n          username = _login$.username,\n          password = _login$.password;\n\n      let _this$state = this.state,\n          username1 = _this$state.username1,\n          password1 = _this$state.password1;\n\n      if (!username || !password) {\n        alert(\"username should not be blank\");\n        return false;\n      }\n\n      if (username !== username1 || password !== password1) {\n        alert(\"Invalid Credentials\");\n        return false;\n      } else {\n        this.props.sigIn(this.state);\n        this.props.history.push('/Dashboard');\n      }\n    };\n\n    this.state = {\n      username1: '',\n      password1: ''\n    };\n  }\n\n  render() {\n    let _this$state2 = this.state,\n        username1 = _this$state2.username1,\n        password1 = _this$state2.password1;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"h4 text-center py-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"div\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      name: \"username1\",\n      value: username1,\n      label: \"Your name\",\n      icon: \"user\",\n      group: true,\n      type: \"text\",\n      validate: true,\n      error: \"wrong\",\n      success: \"right\",\n      onChange: event => this.inputChnage(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      name: \"password1\",\n      value: password1,\n      label: \"Your password\",\n      icon: \"lock\",\n      group: true,\n      type: \"password\",\n      validate: true,\n      onChange: event => this.inputChnage(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"text-center py-4 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"cyan\",\n      type: \"button\",\n      onClick: event => this.buttonSubmit(event),\n      disables: this.buttonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Login\")))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    state: state\n  };\n};\n\nexport default connect(mapStateToProps, {\n  sigIn\n})(Login);","map":{"version":3,"sources":["/Users/praveen.invts/Desktop/appiness-interactive/src/components/login/index.js"],"names":["React","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","MDBCard","MDBCardBody","sigIn","connect","login","Login","Component","constructor","props","inputChnage","event","target","name","value","setState","buttonSubmit","preventDefault","username","password","state","username1","password1","alert","history","push","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody } from 'mdbreact';\nimport './login.css'; \nimport { sigIn } from '../../action/loginAction';   \nimport { connect } from 'react-redux';\nimport { login } from '../../json/index';\n\nclass Login extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            username1:'',\n            password1:'',\n        }\n    }\n\n    inputChnage = (event) =>{\n        const { name, value } =  event.target;\n        this.setState({ [name]: value});\n    }\n    \n    buttonSubmit = (event) => {\n        event.preventDefault();\n        let [ { username, password } ] = login;\n       \n        let { username1, password1 } = this.state\n        if(!username || !password){\n            alert(\"username should not be blank\")\n            return false;\n        }if(username !==username1 || password !==password1){\n            alert(\"Invalid Credentials\")\n            return false;\n        }else{\n            this.props.sigIn(this.state)\n            this.props.history.push('/Dashboard')\n        }\n    }\n    render(){\n        let { username1, password1 } =  this.state;\n        return(\n            <div className=\"container\">\n            <MDBContainer >\n            <MDBRow>\n              <MDBCol md=\"6\">\n                <MDBCard>\n                  <MDBCardBody>\n                    <form>\n                      <p className=\"h4 text-center py-4\">Login</p>\n                      <div className=\"grey-text\">\n                        <MDBInput\n                         name=\"username1\"\n                         value={username1}\n                          label=\"Your name\"\n                          icon=\"user\"\n                          group\n                          type=\"text\"\n                          validate\n                          error=\"wrong\"\n                          success=\"right\"\n                          onChange={(event) => this.inputChnage(event)}\n                        />\n                        <MDBInput\n                            name=\"password1\"\n                            value={password1}\n                          label=\"Your password\"\n                          icon=\"lock\"\n                          group\n                          type=\"password\"\n                          validate\n                          onChange={(event) => this.inputChnage(event)}\n                        />\n                      </div>\n                      <div className=\"text-center py-4 mt-3\">\n                        <MDBBtn color=\"cyan\" type=\"button\" onClick={(event)=> this.buttonSubmit(event)}\n                            disables={this.buttonSubmit}\n                        >\n                          Login\n                        </MDBBtn>\n                      </div>\n                    </form>\n                  </MDBCardBody>\n                </MDBCard>\n              </MDBCol>\n            </MDBRow>\n          </MDBContainer>\n          </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n\n       return {\n           state: state,\n       };\n   }\n   export default connect(mapStateToProps, { sigIn })(Login);"]},"metadata":{},"sourceType":"module"}