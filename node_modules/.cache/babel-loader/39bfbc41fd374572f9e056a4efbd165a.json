{"ast":null,"code":"import _slicedToArray from \"/Users/praveen.invts/Desktop/appiness-interactive/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { LOGIN_SUCESS, ERROR_MESSAGE } from './actionType';\nimport { login } from '../json/index';\nexport const sigIn = data => dispatch => {\n  let _login = _slicedToArray(login, 1),\n      _login$ = _login[0],\n      username = _login$.username,\n      password = _login$.password;\n\n  if (username === data.username && password === data.password) {\n    dispatch({\n      type: LOGIN_SUCESS,\n      payload: data\n    });\n  } else if (username !== data.username && password !== data.password) {\n    dispatch({\n      type: ERROR_MESSAGE,\n      id: null,\n      payload: \"Invalid Credentials\"\n    });\n  } //    console.log(data)\n  //     let [ { username, password } ] = login;\n  //     console.log(\"before\")\n  //     if(username !== data.username && password !== data.password){\n  //         return false;\n  //     }\n  //     console.log(\"after\")\n  //     if(username === data.username && password === data.password){\n  //       dispatch({\n  //         type: LOGIN_SUCESS,\n  //         payload: data\n  //       })\n  //         return true\n  // }else{\n  //     dispatch({\n  //         type: ERROR_MESSAGE,\n  //         id:null,\n  //         payload: \"Invalid Credentials\"\n  //       })\n  //     return false;\n  // }\n\n};","map":{"version":3,"sources":["/Users/praveen.invts/Desktop/appiness-interactive/src/action/loginAction.js"],"names":["LOGIN_SUCESS","ERROR_MESSAGE","login","sigIn","data","dispatch","username","password","type","payload","id"],"mappings":";AAAA,SAASA,YAAT,EAAwBC,aAAxB,QAA4C,cAA5C;AACA,SAASC,KAAT,QAAsB,eAAtB;AAEA,OAAO,MAAMC,KAAK,GAAIC,IAAD,IAASC,QAAQ,IAAE;AAAA,8BACHH,KADG;AAAA;AAAA,MAC5BI,QAD4B,WAC5BA,QAD4B;AAAA,MAClBC,QADkB,WAClBA,QADkB;;AAEpC,MAAGD,QAAQ,KAAKF,IAAI,CAACE,QAAlB,IAA8BC,QAAQ,KAAKH,IAAI,CAACG,QAAnD,EAA4D;AACxDF,IAAAA,QAAQ,CAAC;AACGG,MAAAA,IAAI,EAAER,YADT;AAEGS,MAAAA,OAAO,EAAEL;AAFZ,KAAD,CAAR;AAKH,GAND,MAMM,IAAIE,QAAQ,KAAKF,IAAI,CAACE,QAAlB,IAA8BC,QAAQ,KAAKH,IAAI,CAACG,QAApD,EAA6D;AAC/DF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEP,aADD;AAELS,MAAAA,EAAE,EAAC,IAFE;AAGLD,MAAAA,OAAO,EAAE;AAHJ,KAAD,CAAR;AAMH,GAfmC,CAgBxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGH,CAvCM","sourcesContent":["import { LOGIN_SUCESS , ERROR_MESSAGE} from './actionType';\nimport { login } from '../json/index'\n\nexport const sigIn = (data) =>dispatch=>{\n    let [ { username, password } ] = login;\n    if(username === data.username && password === data.password){\n        dispatch({\n                    type: LOGIN_SUCESS,\n                    payload: data\n                  })\n\n    }else if (username !== data.username && password !== data.password){\n        dispatch({\n            type: ERROR_MESSAGE,\n            id:null,\n            payload: \"Invalid Credentials\"\n          })\n        \n    }\n//    console.log(data)\n//     let [ { username, password } ] = login;\n//     console.log(\"before\")\n//     if(username !== data.username && password !== data.password){\n//         return false;\n//     }\n//     console.log(\"after\")\n//     if(username === data.username && password === data.password){\n//       dispatch({\n//         type: LOGIN_SUCESS,\n//         payload: data\n//       })\n//         return true\n    // }else{\n    //     dispatch({\n    //         type: ERROR_MESSAGE,\n    //         id:null,\n    //         payload: \"Invalid Credentials\"\n    //       })\n    //     return false;\n    // }\n    \n\n}"]},"metadata":{},"sourceType":"module"}